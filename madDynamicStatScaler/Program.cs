
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using DynamicData.Kernel;
using Mutagen.Bethesda;
using Mutagen.Bethesda.FormKeys.SkyrimSE;
using Mutagen.Bethesda.Plugins;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;
using Noggog;
using System.Text.RegularExpressions;
using System.Reflection;
using System.Reflection.Metadata;
using CommandLine;
using System.Linq;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Plugins.Records;
using Mutagen.Bethesda.Skyrim;
using ScriptProperty = Mutagen.Bethesda.Skyrim.ScriptProperty;
using VirtualMachineAdapter = Mutagen.Bethesda.Skyrim.VirtualMachineAdapter;
using IQuest = Mutagen.Bethesda.Skyrim.IQuest;
using System.Collections;
using DynamicData;
using Newtonsoft.Json;


// Function to initialize the matches dictionary with all keys set to 0


namespace madDynamicStatScaler;

public class Program
{
    private static Lazy<Settings> formSettings = null!;

    public static Task<int> Main(string[] args)
    {
        return SynthesisPipeline.Instance
            .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
            .SetAutogeneratedSettings(
                "Settings",
                "Settings.json",
                out formSettings)
            .SetTypicalOpen(GameRelease.SkyrimSE, "madDynamicStatRescalerPatch.esp")
            .Run(args);
    }
    
    public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
    {
        var spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000800:madDynamicStatScaler.esp"));
        IFormLinkGetter<ISpellRecordGetter> spellStaminaPerLevelLink = spellStaminaPerLevel;
        var spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        var modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        int i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_health_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000801:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_health_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000808:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0; 
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_magicka_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000809:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_magicka_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00080B:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
                i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_stamina_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00080C:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_stamina_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00080F:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_two_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000810:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_two_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000812:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_One_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000813:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_one_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000815:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_marksman_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000816:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_marksman_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000818:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_Dest_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000819:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);
        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
             i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_Dest_Negative_BossNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000822:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_healthNum;

            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000823:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_magickaNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000824:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_staminaNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000825:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_twoNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000826:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_OneNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000827:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_marksmanNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000828:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_DestNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000829:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_health_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082A:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_magicka_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082B:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_stamina_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082C:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_two_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082D:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_one_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082E:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_marksman_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("00082F:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        foreach (var effect in modifiedStamina.Effects)
        {
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_Dest_NegativeNum;
            }
        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000831:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_health_dragonNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }

        }


        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000832:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_health_Negative_DragonNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }

        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000837:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_UA_dragonNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }

        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000838:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        i = 0;
        foreach (var effect in modifiedStamina.Effects)
        {
            i++;
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_UA_Negative_DragonNum;
                if (i >= formSettings.Value.mad_Rescale_bossdragNum)
                {
                    effect.Data.Magnitude = 0;
                }
            }
        }

        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000835:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);

        
        foreach (var effect in modifiedStamina.Effects)
        {
           
            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_UA_CreatureNum;

            }
        }

        spellStaminaPerLevel = new FormLink<ISpellGetter>(FormKey.Factory("000836:madDynamicStatScaler.esp"));
        spellStaminaPerLevelLink = spellStaminaPerLevel;
        spellStaminaPerLevelGetter = spellStaminaPerLevelLink.Resolve(state.LinkCache);
        modifiedStamina = state.PatchMod.Spells.GetOrAddAsOverride(spellStaminaPerLevelGetter);


        foreach (var effect in modifiedStamina.Effects)
        {

            if (effect.Data != null)
            {
                effect.Data.Magnitude = formSettings.Value.mad_Rescale_UA_Negative_CreatureNum;

            }
        }



    }

}
